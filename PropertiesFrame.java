/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exchangeallocatorframe;

import static exchangeallocatorframe.ExchangeAllocatorFrame.cookieFile;
import static exchangeallocatorframe.ExchangeAllocatorFrame.studyList;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emielv
 */
public class PropertiesFrame extends javax.swing.JFrame {

    

    /**
     * Creates new form PropertiesFrame
     */
    public PropertiesFrame() {
        initComponents();
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        studyTable = new javax.swing.JTable();
        studyAdder = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        studyRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Studies");

        studyTable.setAutoCreateRowSorter(true);
        studyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Study Track", "Abbreviation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studyTable.setFillsViewportHeight(true);
        studyTable.setRowHeight(20);
        studyTable.setShowGrid(true);
        jScrollPane1.setViewportView(studyTable);

        studyAdder.setText("Add study");
        studyAdder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studyAdderActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        studyRemover.setText("Remove study");
        studyRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studyRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(studyAdder)
                .addGap(19, 19, 19)
                .addComponent(studyRemover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studyAdder)
                    .addComponent(exitButton)
                    .addComponent(studyRemover))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populate() {
        updateStudies();
        fillRows(studyList);
    }
    
    private void updateStudies() {
        ExchangeAllocatorFrame.readStudies();
    }

    private void fillRows(String[] studyList) {
        DefaultTableModel model = (DefaultTableModel) studyTable.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        System.out.println(studyList.length);
        for (String row : studyList) {
            String[] data = row.split(";");
            model.addRow(data);
        }
    }

    private void studyAdderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studyAdderActionPerformed
        // TODO add your handling code here:
        StudyAdderFrame frame = new StudyAdderFrame();
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_studyAdderActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void studyRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studyRemoverActionPerformed
        int studyIndex = studyTable.getSelectedRow();
        System.out.println(studyIndex);
        // remove the study from the text file
        String study = studyList[studyIndex].split(";")[0];
        System.out.println(study);
        try {
            BufferedReader reader = new BufferedReader(new FileReader(new File(cookieFile)));
            int numLines = 0;
            while (reader.readLine() != null) {
                numLines++;
            }
            reader.close();
            reader = new BufferedReader(new FileReader(new File(cookieFile)));
            String[] lines = new String[numLines-1];
            int sepIndex = 0;
            for (int i = 0; i < numLines; i++) {
                String line = reader.readLine();
                String[] parts = line.split(";");
                if (parts.length != 2) {
                    lines[sepIndex] = line;
                    sepIndex++;
                }
                else {
                    if (!parts[0].equals(study)) {
                        System.out.println(line);
                        lines[sepIndex] = line;
                        sepIndex++;
                    }
                }
            }
            reader.close();
            BufferedWriter writer = new BufferedWriter(new FileWriter(new File(cookieFile)));
            for (String line: lines) {
                writer.append(line);
                writer.append("\n");
            }
            writer.close();
            populate();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error writing the new Student Choices File.",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }//GEN-LAST:event_studyRemoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PropertiesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton studyAdder;
    private javax.swing.JButton studyRemover;
    private javax.swing.JTable studyTable;
    // End of variables declaration//GEN-END:variables
}
